{"version":3,"sources":["App/Applayout.js","App/Navbar.js","Components/Welcome.js","Components/SaveSettingsButton.js","Components/CoinsSearch.js","Components/Selectors.js","Components/Pages.js","Components/Chart.js","App/Core.js","App/index.js","serviceWorker.js","index.js","App/actionTypes.js","Shared/CardHover.js","Components/Coin.js","App/AppProvider.js","Components/loading.gif","Shared/SharedStyles.js"],"names":["Applayout","styled","div","NavHorizontal","Logo","LinkActive","active","css","StyledLink","name","React","useContext","AppContext","state","dispatch","page","onClick","type","SET_PAGE","payload","Navbar","Title","Welcome","params","firstVisit","CenterDive","OkButtonStyled","fontSize1","color3","cyanBoxShadow","SaveSettingsButton","newSettings","favorites","SET_STORAGE","localStorage","setItem","JSON","stringify","InputIcon","Form","form","Input","input","CoinsSearch","value","query","onChange","e","target","toLowerCase","QUERY","setTimeout","SEARCH","className","Selector","Selectors","SelectToCurrency","for","id","toCurrency","SET_CURRENCY","changeCurrency","SelectTimePoints","timePoints","SET_TIMEPOINTS","changeTimePoints","SelectTimeRange","timeRange","SET_TIMERANGE","changeTimeRange","SelectorGroup","CoinsGrid","lazy","Loading","Fallback","src","loading","alt","Seperator","Container","Dashboard","Suspense","fallback","favored","dashboard","Historic","Settings","showStar","historical","timeLabels","historicalPrice","i","push","data","canvas","gradient","getContext","createLinearGradient","addColorStop","labels","datasets","label","backgroundColor","borderColor","borderWidth","lineTension","cc","setApiKey","Core","allCurrency","timeForm","fetchCoins","useCallback","a","coinList","rs","Data","coins","FETCH_COINS","fetchPrices","prices","priceFull","price","FETCH_PRICES","fetchHistorical","point","priceHistorical","dayjs","subtract","toDate","format","FETCH_HISTORICAL","useEffect","cryptoBoardData","parse","getItem","RETRIEVE_STORAGE","App","AppProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","ADD_FAVORITES","SHOW_STAR","BlueCard","subtleBoxShadow","lightBlueBackground","BlueCardHover","StarMe","RedCardHover","redBoxShadow","DisabledCardHover","CoinCard","CoinInfo","props","CoinImage","img","Coin","coin","coinKey","toggelFavorit","disabled","toCurrencey","CardHover","undefined","CoinName","Symbol","PRICE","ImageUrl","initialState","found","createContext","reducer","action","Object","keys","filter","includes","newFavorites","isFavorit","useReducer","Provider","children","module","exports"],"mappings":"uSAEA,IAGeA,EAHCC,IAAOC,IAAV,K,2pBCGb,IAAIC,EAAgBF,IAAOC,IAAV,KAObE,EAAOH,IAAOC,IAAV,KAIJG,EAAaJ,IAAOC,IAAV,KAIR,qBAAGI,QAEDC,YADM,QAORC,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAmB,KAAbH,OACII,IAAMC,WAAWC,MAArCC,EAD6B,EAC7BA,MAAOC,EADsB,EACtBA,SACf,OACI,kBAACT,EAAD,CACIC,OAAQG,IAASI,EAAME,KACvBC,QAAS,kBAAMF,EAAS,CAAEG,KAAMC,IAAUC,QAASV,MAElDA,IAKE,SAASW,IACpB,OACI,kBAACjB,EAAD,KACI,kBAACC,EAAD,sBACA,kBAAC,EAAD,CAAYK,KAAM,cAClB,kBAAC,EAAD,CAAYA,KAAM,c,2HCzC9B,IAAIY,EAAQpB,IAAOC,IAAV,KAKF,SAASoB,EAAQC,GAAS,IACrBV,EAAUH,IAAMC,WAAWC,KAA3BC,MACR,OACI,kBAACQ,EAAD,KACKR,EAAMW,YACH,qK,qWCHhB,IAAIC,EAAaxB,IAAOC,IAAV,KAIVwB,EAAiBzB,IAAOC,IAAV,IAIZyB,IACOC,IAGHC,KAGH,SAASC,IAAsB,IAAD,EACLpB,IAAMC,WAAWC,KAArCC,EADyB,EACzBA,MAAOC,EADkB,EAClBA,SAWf,OACI,kBAACW,EAAD,KACI,kBAACC,EAAD,CAAgBV,QAXJ,WAChB,IAAIe,EAAc,CACdC,UAAWnB,EAAMmB,UACjBjB,KAAM,YACNS,YAAY,GAEhBV,EAAS,CAAEG,KAAMgB,IAAad,QAASY,IACvCG,aAAaC,QAAQ,cAAeC,KAAKC,UAAUN,MAI/C,sB,qrBClCZ,IAAMO,EAAYrC,IAAOC,IAAV,KASTqC,EAAOtC,IAAOuC,KAAV,KAMJC,EAAQxC,IAAOyC,MAAV,KAcJ,SAASC,IAAe,IAAD,EACEjC,IAAMC,WAAWC,KAArCE,EADkB,EAClBA,SAAUD,EADQ,EACRA,MAWlB,OACI,6BACI,kBAAC0B,EAAD,KACI,kBAACE,EAAD,CACIxB,KAAK,OACLR,KAAK,SACLmC,MAAO/B,EAAMgC,MACbC,SAhBK,SAACC,GAClB,IAAIF,EAAQE,EAAEC,OAAOJ,MAAMK,cAC3BnC,EAAS,CAAEG,KAAMiC,IAAO/B,QAAS0B,IAEjCM,YAAW,WACPrC,EAAS,CAAEG,KAAMmC,QAClB,QAYK,kBAACd,EAAD,KACI,uBAAGe,UAAU,kBAAb,a,oYChDpB,IAAIC,EAAWrD,IAAOC,IAAV,KAYRqD,EAAYtD,IAAOC,IAAV,KAINsD,EAAmB,WAAO,IAAD,EACA9C,IAAMC,WAAWC,KAArCC,EADoB,EACpBA,MAAOC,EADa,EACbA,SAKf,OACI,kBAACwC,EAAD,KACI,2BAAOG,IAAI,cAAX,cACA,4BACIC,GAAG,aACHjD,KAAK,aACLmC,MAAO/B,EAAM8C,WACbb,SAAU,SAACC,GAAD,OAXC,SAACA,GACpB,IAAIY,EAAaZ,EAAEC,OAAOJ,MAC1B9B,EAAS,CAAEG,KAAM2C,IAAczC,QAASwC,IASfE,CAAed,KAEhC,4BAAQH,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,UAOTkB,EAAmB,WAAO,IAAD,EACApD,IAAMC,WAAWC,KAArCC,EADoB,EACpBA,MAAOC,EADa,EACbA,SAMf,OACI,kBAACwC,EAAD,KACI,2BAAOG,IAAI,cAAX,UACA,4BACIC,GAAG,aACHjD,KAAK,aACLmC,MAAO/B,EAAMkD,WACbjB,SAAU,SAACC,GAAD,OAZG,SAACA,GACtB,IAAIgB,EAAahB,EAAEC,OAAOJ,MAC1B9B,EAAS,CAAEG,KAAM+C,IAAgB7C,QAAS4C,IAUjBE,CAAiBlB,KAElC,4BAAQH,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,SAMVsB,EAAkB,WAAO,IAAD,EACExD,IAAMC,WAAWC,KAArCC,EADkB,EAClBA,MAAOC,EADW,EACXA,SAMf,OACI,kBAACwC,EAAD,KACI,4BACI7C,KAAK,YACLmC,MAAO/B,EAAMsD,UACbrB,SAAU,SAACC,GAAD,OAVE,SAACA,GACrB,IAAIoB,EAAYpB,EAAEC,OAAOJ,MACzB9B,EAAS,CAAEG,KAAMmD,IAAejD,QAASgD,IAQhBE,CAAgBtB,KAEjC,4BAAQH,MAAM,UAAd,UACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,YAMH0B,EAAgB,WACzB,OACI,kBAACf,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,+aC3FZ,IAAMgB,GAAY7D,IAAM8D,MAAK,kBAAM,iCAE7BC,GAAUxE,IAAOC,IAAV,MAKPwE,GAAW,WACb,OACI,kBAACD,GAAD,KACI,yBAAKE,IAAKC,IAASC,IAAI,cAK/BC,GAAY7E,IAAOC,IAAV,MAGT6E,GAAY9E,IAAOC,IAAV,KASb,SAAS8E,KACL,OACI,oCACI,kBAAC,IAAMC,SAAP,CAAgBC,SAAU,kBAAC,GAAD,OACtB,kBAACX,GAAD,CAAWY,SAAO,EAACC,WAAS,KAEhC,6BACA,kBAACN,GAAD,MACA,kBAACC,GAAD,KAEQ,kBAAC,EAAD,MAGJ,kBAACM,GAAD,QAQhB,SAASC,KACL,OACI,oCACI,kBAAC,IAAML,SAAP,CAAgBC,SAAU,kBAAC,GAAD,OACtB,kBAACX,GAAD,CAAWY,SAAO,KAGtB,kBAACrD,EAAD,MACA,6BACA,kBAACa,EAAD,MAEA,kBAAC,IAAMsC,SAAP,CAAgBC,SAAU,kBAAC,GAAD,OACtB,kBAACX,GAAD,Q,aChEhB,SAASc,KAAW,IAAD,EAGX3E,IAAMC,WAAWC,KADjBC,MAAS0E,EAFE,EAEFA,SAAUC,EAFR,EAEQA,WAAYC,EAFpB,EAEoBA,WAAY9B,EAFhC,EAEgCA,WAEzC+B,EAAkB,GACxB,IAAI,IAAIC,KAAKH,EACTE,EAAgBE,KAAKJ,EAAWG,GAAGhC,IA8BvC,OAAO,kBAAC,QAAD,CAAMkC,KA5BA,SAACC,GACd,IACMC,EADMD,EAAOE,WAAW,MACTC,qBAAqB,EAAG,IAAK,IAAK,IAIvD,OAHAF,EAASG,aAAa,EAAG,0BACzBH,EAASG,aAAa,GAAK,0BAC3BH,EAASG,aAAa,EAAG,2BAClB,CACHC,OAAQV,EACRW,SAAU,CACN,CACIC,MAAM,GAAD,OAAKd,EAAW,OAAS5B,EAAzB,UACLkC,KAAMH,EACNY,gBAAiBP,EACjBQ,YAAa,CACT,0BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BAEJC,YAAa,EACbC,YAAa,S,+BCvB7BC,KAAGC,UACC,oEAGJ,IA8EeC,GA9EF,WAAM,IAAD,EAaVlG,IAAMC,WAAWC,KAbP,IAEVC,MACIE,EAHM,EAGNA,KACAiB,EAJM,EAINA,UACAuD,EALM,EAKNA,SACA5B,EANM,EAMNA,WACAkD,EAPM,EAONA,YACA1C,EARM,EAQNA,UACA2C,EATM,EASNA,SACA/C,EAVM,EAUNA,WAEJjD,EAZU,EAYVA,SAGEiG,EAAarG,IAAMsG,YAAN,sBAAkB,8BAAAC,EAAA,sEAClBP,KAAGQ,WADe,cAC7BC,EAD6B,gBAEfA,EAAGC,KAFY,OAE7BC,EAF6B,OAGjCvG,EAAS,CAAEG,KAAMqG,IAAanG,QAASkG,IAHN,2CAIlC,CAACvG,IAEEyG,EAAc7G,IAAMsG,YAAN,sBAAkB,gCAAAC,EAAA,sDAC9BO,EAAS,GADqB,OAAAP,EAAA,KAEpBjF,GAFoB,qDAEzB2D,EAFyB,oBAGZe,KAAGe,UAAUzF,EAAU2D,GAAIkB,GAHf,OAG1Ba,EAH0B,OAI9BF,EAAOxF,EAAU2D,IAAM+B,EAJO,uBAMlC5G,EAAS,CAAEG,KAAM0G,IAAcxG,QAASqG,IANN,4CAOnC,CAAC1G,EAAUkB,EAAU6E,IAElBe,EAAkBlH,IAAMsG,YAAN,sBAAkB,kCAAAC,EAAA,sDAClCzB,EAAa,GACbC,EAAa,GAERoC,EAAQ9D,EAJqB,YAIT8D,GAAS,GAJA,iCAKhBnB,KAAGoB,gBACjBvC,EACA,CAAC5B,GACDoE,MAAQC,SAASH,EAAO1D,GAAW8D,UARL,OAK9BP,EAL8B,OAUlClC,EAAWI,KAAK8B,GAChBjC,EAAWG,KACPmC,MAAQC,SAASH,EAAO1D,GAAW+D,OAAOpB,IAZZ,OAIGe,IAJH,uBAetC/G,EAAS,CACLG,KAAMkH,IACNhH,QAAS,CAAEqE,aAAYC,gBAjBW,4CAmBvC,CAAC3E,EAAUyE,EAAUxB,EAAYJ,EAAYQ,IAmBhD,OAjBAzD,IAAM0H,WAAU,WACZ,IAAIC,EAAkBjG,KAAKkG,MAAMpG,aAAaqG,QAAQ,gBAEtDxB,IAEAQ,IAEAK,IAEIS,GACAvH,EAAS,CACLG,KAAMuH,IACNrH,QAASkH,MAGlB,CAAC9C,EAAU5B,EAAYI,EAAYI,IAGlC,oCACI,kBAAC/C,EAAD,MACA,kBAACE,EAAD,MACU,aAATP,EAAsB,kBAACuE,GAAD,MAAe,kBAACN,GAAD,QCzEnCyD,OAZf,WACI,OACI,oCACI,kBAAC,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,UCEAC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,+BEzI5B,0bAAO,IAAMxC,EAAc,cACdkB,EAAmB,mBACnBvG,EAAc,cACdf,EAAW,WACX6I,EAAgB,gBAChB3G,EAAS,SACTF,EAAQ,QACR8G,EAAY,YACZrC,EAAe,eACfQ,EAAmB,mBACnBvE,EAAe,eACfQ,EAAgB,gBAChBJ,EAAiB,kB,grBCJvB,IAAMiG,EAAWhK,IAAOC,IAAV,IACfgK,IACAC,KAIOC,EAAgBnK,YAAOgK,EAAPhK,CAAH,IAEhB4B,KAGGwI,EAASpK,YAAOgK,EAAPhK,CAAH,IACb4B,KAIOyI,EAAerK,YAAOmK,EAAPnK,CAAH,IAEfsK,KAGGC,EAAoBvK,YAAOmK,EAAPnK,CAAH,K,mgBCpB9B,IAAMwK,EAAWxK,IAAOC,IAAV,KAORwK,EAAWzK,IAAOC,IAAV,KAIG,SAACyK,GAAD,OAAYA,EAAMpF,SAAW,mBAAqB,UAE7DqF,EAAY3K,IAAO4K,IAAV,KAQf,SAASC,EAAT,GAUI,IATAC,EASD,EATCA,KACAC,EAQD,EARCA,QAQD,IAPCC,qBAOD,aANC9F,eAMD,aALCuC,aAKD,MALS,KAKT,MAJCwD,gBAID,aAHC3F,gBAGD,aAFCH,iBAED,aADC+F,mBACD,MADe,KACf,EACKC,EAAYhB,EAQhB,OAPIjF,IAAYC,EACZgG,EAAYd,GACJnF,GAAW+F,EACnBE,EAAYZ,EACLQ,IAAYzF,IACnB6F,EAAYf,GAGZ,kBAACe,EAAD,CACIpK,QAASiK,EAAgB,kBAAMA,EAAcD,SAAWK,GAExD,kBAACZ,EAAD,KACI,kBAACC,EAAa,CAAEnF,YACZ,6BAAMwF,GAAQA,EAAKO,UACnB,6BAAMP,GAAQA,EAAKQ,QAClB7D,EACG,6BACKyD,GAAezD,EAAMsD,GAASG,GAAaK,MAAO,IAClDL,GAEL,MAEPhG,GACG,kBAACyF,EAAD,CACIjG,IAAG,uCACCoG,GAAQA,EAAKU,UAEjB5G,IAAKkG,GAAQA,EAAKO,e,qJCrDpCI,EAAe,CACjB3K,KAAM,YACNS,YAAY,EACZ6F,MAAO,GACPrF,UAAW,CAAC,MAAO,OACnBwF,OAAQ,GACR7D,WAAY,MACZkD,YAAa,gBACbrB,WAAY,GACZC,WAAY,GACZtB,UAAW,SACX2C,SAAU,MACV/C,WAAY,GACZwB,SAAU,MACV1C,MAAO,GACP8I,MAAO,IAEE/K,EAAaF,IAAMkL,gBAEhC,SAASC,EAAQhL,EAAOiL,GAAS,IACrB7K,EAAkB6K,EAAlB7K,KAAME,EAAY2K,EAAZ3K,QACd,OAAQF,GACJ,KAAKqG,IACD,OAAO,2BAAKzG,GAAZ,IAAmBwG,MAAOlG,IAC9B,KAAKwG,IACD,OAAO,2BAAK9G,GAAZ,IAAmB2G,OAAQrG,IAC/B,KAAKgH,IACD,OAAO,2BACAtH,GADP,IAEI2E,WAAYrE,EAAQqE,WACpBC,WAAYtE,EAAQsE,aAE5B,KAAK+C,IACD,OAAO,2BAAK3H,GAAUM,GAC1B,KAAKD,IACD,OAAO,2BAAKL,GAAZ,IAAmBE,KAAMI,IAC7B,KAAKyC,IACD,OAAO,2BAAK/C,GAAZ,IAAmB8C,WAAYxC,IACnC,KAAK6C,IACD,OAAO,2BAAKnD,GAAZ,IAAmBkD,WAAY5C,IACnC,KAAKiD,IACD,IAAI0C,EAAW,MAMf,MALgB,SAAZ3F,EACA2F,EAAW,KACQ,UAAZ3F,IACP2F,EAAW,MAER,2BAAKjG,GAAZ,IAAmBsD,UAAWhD,EAAS2F,aAC3C,KAAK5D,IACD,OAAO,2BAAKrC,GAAZ,IAAmBgC,MAAO1B,IAE9B,KAAKiC,IACD,IAAIiE,EAAQ0E,OAAOC,KAAKnL,EAAMwG,OAC1BsE,EAAQ9K,EAAMgC,MACZwE,EAAM4E,QACF,SAAClB,GAAD,OACIlK,EAAMwG,MAAM0D,GAAMO,SAASrI,cAAciJ,SACrCrL,EAAMgC,QAEVhC,EAAMwG,MAAM0D,GAAMQ,OAAOtI,cAAciJ,SACnCrL,EAAMgC,UAGlB,GACN,OAAO,2BAAKhC,GAAZ,IAAmB8K,MAAOA,IAC9B,KAAK5B,IACD,IAEIoC,EAAe,GAQnB,OAFIA,EARc,SAAChL,GAAD,OAAaN,EAAMmB,UAAUkK,SAAS/K,GAGpDiL,CAAUjL,GACKN,EAAMmB,UAAUiK,QAC3B,SAAClB,GAAD,OAAUA,IAAS5J,KAGX,sBAAON,EAAMmB,WAAb,CAAwBb,IAEjC,2BAAKN,GAAZ,IAAmBmB,UAAWmK,IAClC,KAAKnC,IACD,OAAO,2BAAKnJ,GAAZ,IAAmB0E,SAAUpE,IACjC,QACI,OAAON,GAGZ,IAAM6H,EAAc,SAACiC,GAAW,IAAD,EACRjK,IAAM2L,WAAWR,EAASH,GADlB,mBAC3B7K,EAD2B,KACpBC,EADoB,KAGlC,OACI,kBAACF,EAAW0L,SAAZ,CAAqB1J,MAAO,CAAE/B,QAAOC,aAChC6J,EAAM4B,Y,mBCxGnBC,EAAOC,QAAU,IAA0B,qC,+BCA3C,gNAOa7K,EAA8B,UAOpC,IAAMuI,EAAmB,4BAVY,WAgB/BD,GALgB,4BAVgB,UAUhB,KACI,4BAAwBtI,EAAxB,KAIL,sCACC,YAIhBC,EAAa,sCACb0I,EAAY,sCAGZ5I,EAAY,qB","file":"static/js/main.7e0a0891.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nlet Applayout = styled.div`\n    padding: 30px;\n`;\nexport default Applayout;\n","import React  from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { AppContext } from \"./AppProvider\";\nimport { SET_PAGE } from \"../App/actionTypes\";\n\nlet NavHorizontal = styled.div`\n    display: grid;\n    grid-template-columns: minmax(100px, 1fr) 50px 50px 50px;\n    grid-gap: 5vw;\n    margin-bottom: 30px;\n`;\n\nlet Logo = styled.div`\n    font-size: calc(1.1em + 1vw);\n`;\n\nlet LinkActive = styled.div`\n    justify-self: right;\n    font-size: calc(1em + .5vw);\n    cursor: pointer;\n    ${({ active }) =>\n        active &&\n        css`\n            text-shadow: 0 0 20px #00d0ff, 5px 5px 5px #69eaff;\n        `}\n`;\n\n\nconst StyledLink = ({ name, active }) => {\n    const { state, dispatch } = React.useContext(AppContext);\n    return (\n        <LinkActive\n            active={name === state.page}\n            onClick={() => dispatch({ type: SET_PAGE, payload: name })}\n        >\n            {name}\n        </LinkActive>\n    );\n};\n\nexport default function Navbar() {\n    return (\n        <NavHorizontal>\n            <Logo>_CryptoBoard_</Logo>\n            <StyledLink name={\"Dashboard\"} />\n            <StyledLink name={\"Settings\"} />\n            \n        </NavHorizontal>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../App/AppProvider\";\n\nlet Title = styled.div`\n    margin: 10px;\n    text-transform: capitalize;\n`;\n\nexport function Welcome(params) {\n    const { state } = React.useContext(AppContext);\n    return (\n        <Title>\n            {state.firstVisit && (\n                <h3>\n                    Welcome to CryptoBoard!, it's your first visit, you can see\n                    a specific chart in dashboard and change your settings in\n                    settings page.\n                </h3>\n            )}\n        </Title>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { AppContext } from \"../App/AppProvider\";\nimport { SET_STORAGE } from \"../App/actionTypes\";\nimport {\n    color3,\n    fontSize1,\n    cyanBoxShadow,\n} from \"../Shared/SharedStyles.js\";\n\nlet CenterDive = styled.div`\n    display: grid;\n    place-items: center;\n`;\nlet OkButtonStyled = styled.div`\n    background-color: transparent;\n    margin: 20px;\n    padding: 5px;\n    ${fontSize1};\n    color: ${color3};\n    cursor: pointer;\n    &:hover {\n        ${cyanBoxShadow}\n    }\n`;\nexport function SaveSettingsButton() {\n    const { state, dispatch } = React.useContext(AppContext);\n\n    const setSettings = () => {\n        let newSettings = {\n            favorites: state.favorites,\n            page: \"Dashboard\",\n            firstVisit: false,\n        };\n        dispatch({ type: SET_STORAGE, payload: newSettings });\n        localStorage.setItem(\"cryptoBoard\", JSON.stringify(newSettings));\n    };\n    return (\n        <CenterDive>\n            <OkButtonStyled onClick={setSettings}>\n                Confirm Favorites\n            </OkButtonStyled>\n        </CenterDive>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { SEARCH, QUERY } from \"../App/actionTypes\";\nimport { AppContext } from \"../App//AppProvider\";\n\nconst InputIcon = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    color: #00edf9;\n    margin: 3px;\n    z-index: -1;\n`;\n\nconst Form = styled.form`\n    position: relative;\n    display: flex;\n    margin-bottom: 50px;\n    width: 1vw;\n`;\nconst Input = styled.input`\n    background-color: rgba(255, 255, 255, 0.5);\n    width: 1vw;\n    height: 6vh;\n    border-radius: 30px;\n    border-color: #00edf9;\n    border-width: 0;\n    padding-left: 25px;\n    transition: all 1s;\n    &:focus {\n        width: 30vw;\n        border-radius: 5px;\n    }\n`;\nexport function CoinsSearch() {\n    const { dispatch, state } = React.useContext(AppContext);\n\n    const handelChange = (e) => {\n        let query = e.target.value.toLowerCase();\n        dispatch({ type: QUERY, payload: query });\n\n        setTimeout(() => {\n            dispatch({ type: SEARCH });\n        }, 500);\n    };\n\n    return (\n        <div>\n            <Form>\n                <Input\n                    type=\"text\"\n                    name=\"search\"\n                    value={state.query}\n                    onChange={handelChange}\n                />\n                <InputIcon>\n                    <i className=\"material-icons\">search</i>\n                </InputIcon>\n            </Form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { AppContext } from \"../App/AppProvider\";\nimport {\n    SET_CURRENCY,\n    SET_TIMERANGE,\n    SET_TIMEPOINTS,\n} from \"../App/actionTypes\";\n\nlet Selector = styled.div`\n    margin-right: 10px;\n    select ,\n        option {\n            font-size: calc(10px + 0.5vw);\n            cursor: pointer;\n            background-color: #010010;\n            color: #fff;\n        \n    }\n`;\n\nlet Selectors = styled.div`\n    display: flex;\n    \n`;\n const SelectToCurrency = () => {\n    const { state, dispatch } = React.useContext(AppContext);\n    const changeCurrency = (e) => {\n        let toCurrency = e.target.value;\n        dispatch({ type: SET_CURRENCY, payload: toCurrency });\n    };\n    return (\n        <Selector>\n            <label for=\"toCurrency\">Currency: </label>\n            <select\n                id=\"toCurrency\"\n                name=\"toCurrency\"\n                value={state.toCurrency}\n                onChange={(e) => changeCurrency(e)}\n            >\n                <option value=\"EUR\">EUR</option>\n                <option value=\"USD\">USD</option>\n                <option value=\"BTC\">BTC</option>\n            </select>\n        </Selector>\n    );\n};\n\n \n const SelectTimePoints = () => {\n    const { state, dispatch } = React.useContext(AppContext);\n    const changeTimePoints = (e) => {\n        let timePoints = e.target.value;\n        dispatch({ type: SET_TIMEPOINTS, payload: timePoints });\n    };\n\n    return (\n        <Selector>\n            <label for=\"timePoints\">Time: </label>\n            <select\n                id=\"timePoints\"\n                name=\"timePoints\"\n                value={state.timePoints}\n                onChange={(e) => changeTimePoints(e)}\n            >\n                <option value=\"3\">3</option>\n                <option value=\"6\">6</option>\n                <option value=\"9\">9</option>\n                <option value=\"12\">12</option>\n            </select>\n        </Selector>\n    );\n};\n\nconst SelectTimeRange = () => {\n    const { state, dispatch } = React.useContext(AppContext);\n    const changeTimeRange = (e) => {\n        let timeRange = e.target.value;\n        dispatch({ type: SET_TIMERANGE, payload: timeRange });\n    };\n\n    return (\n        <Selector>\n            <select\n                name=\"timeRange\"\n                value={state.timeRange}\n                onChange={(e) => changeTimeRange(e)}\n            >\n                <option value=\"months\">months</option>\n                <option value=\"days\">days</option>\n                <option value=\"hours\">hours</option>\n            </select>\n        </Selector>\n    );\n};\n\nexport const SelectorGroup = () => {\n    return (\n        <Selectors>\n            <SelectToCurrency />\n            <SelectTimePoints />\n            <SelectTimeRange />\n        </Selectors>\n    );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n    SaveSettingsButton,\n    CoinsSearch,\n    Historic,\n} from \"./index\";\nimport { SelectorGroup } from \"./Selectors\";\nimport loading from \"./loading.gif\";\n\nconst CoinsGrid = React.lazy(() => import(\"./CoinsGrid\"));\n\nconst Loading = styled.div`\n    display: grid;\n    place-items: center;\n    grid-column: 3;\n`;\nconst Fallback = () => {\n    return (\n        <Loading>\n            <img src={loading} alt=\"loading\" />\n        </Loading>\n    );\n};\n\nlet Seperator = styled.div`\n    height: 5vw;\n`;\nlet Container = styled.div`\n    width: 70vw;\n    height: 30vw;\n    margin: 0 auto;\n    display: grid;\n    grid-template-rows: 10% 1fr;\n`;\n\n\nfunction Dashboard() {\n    return (\n        <>\n            <React.Suspense fallback={<Fallback />}>\n                <CoinsGrid favored dashboard />\n            </React.Suspense>\n            <hr />\n            <Seperator />\n            <Container>\n              \n                    <SelectorGroup />\n                  \n             \n                <Historic />\n            </Container>\n        </>\n    );\n}\n\nexport { Dashboard };\n\nfunction Settings() {\n    return (\n        <>\n            <React.Suspense fallback={<Fallback />}>\n                <CoinsGrid favored />\n            </React.Suspense>\n\n            <SaveSettingsButton />\n            <hr />\n            <CoinsSearch />\n\n            <React.Suspense fallback={<Fallback />}>\n                <CoinsGrid />\n            </React.Suspense>\n        </>\n    );\n}\n\nexport { Settings };\n","import React from 'react'\nimport { Line } from \"react-chartjs-2\";\nimport { AppContext } from \"../App/AppProvider\";\n\n\n\nfunction Historic(){\n    const {\n        state: { showStar, historical, timeLabels, toCurrency },\n    } = React.useContext(AppContext);\n    const historicalPrice = []\n    for(let i in historical){\n        historicalPrice.push(historical[i][toCurrency])\n    }\n    const data = (canvas) => {\n    const ctx = canvas.getContext(\"2d\")\n    const gradient = ctx.createLinearGradient(0, 204, 255, 0.3);\n    gradient.addColorStop(0, \"rgba(0, 204, 255, 0.5)\");\n    gradient.addColorStop(0.5, \"rgba(0, 204, 255, 0.7)\");\n    gradient.addColorStop(1, \"rgba(131, 0, 255, 0.91)\");\n    return {\n        labels: timeLabels,\n        datasets: [\n            {\n                label: `${showStar + \" to \" + toCurrency} Price`,\n                data: historicalPrice,\n                backgroundColor: gradient,\n                borderColor: [\n                    \"rgba(0, 204, 255, 0.94)\",\n                    \"rgba(0, 204, 255, 0.94)\",\n                    \"rgba(0, 204, 255, 0.94)\",\n                    \"rgba(0, 204, 255, 0.94)\",\n                    \"rgba(0, 204, 255, 0.94)\",\n                    \"rgba(0, 204, 255, 0.94)\",\n                    \"rgba(0, 204, 255, 0.94)\",\n                ],\n                borderWidth: 1,\n                lineTension: 0.2,\n            },\n        ],\n    };\n    }\n    return <Line data={data} />;\n}\n\nexport {Historic};","import React from \"react\";\nimport dayjs from \"dayjs\";\nimport Navbar from \"./Navbar\";\nimport { Welcome, Dashboard, Settings } from \"../Components\";\nimport { AppContext } from \"./AppProvider\";\nimport {\n    FETCH_COINS,\n    RETRIEVE_STORAGE,\n    FETCH_PRICES,\n    FETCH_HISTORICAL,\n} from \"./actionTypes\";\nimport \"./App.css\";\nimport cc from \"cryptocompare\";\n\ncc.setApiKey(\n    \"ce863a115f37457c7746646a6d4c7a29fc1c247e4a6cebebfb0ad9dd59d71539\"\n);\n\nconst Core = ()=> {\n    const {\n        state: {\n            page,\n            favorites,\n            showStar,\n            toCurrency,\n            allCurrency,\n            timeRange,\n            timeForm,\n            timePoints,\n        },\n        dispatch,\n    } = React.useContext(AppContext);\n\n    const fetchCoins = React.useCallback(async () => {\n        let rs = await cc.coinList();\n        let coins = await rs.Data;\n        dispatch({ type: FETCH_COINS, payload: coins });\n    }, [dispatch]);\n\n    const fetchPrices = React.useCallback(async () => {\n        let prices = {};\n        for (let i in favorites) {\n            let price = await cc.priceFull(favorites[i], allCurrency);\n            prices[favorites[i]] = price;\n        }\n        dispatch({ type: FETCH_PRICES, payload: prices });\n    }, [dispatch, favorites,allCurrency]);\n\n    const fetchHistorical = React.useCallback(async () => {\n        let historical = [];\n        let timeLabels = [];\n\n        for (let point = timePoints; point >= 0; point--) {\n            let price = await cc.priceHistorical(\n                showStar,\n                [toCurrency],\n                dayjs().subtract(point, timeRange).toDate()\n            );\n            historical.push(price);\n            timeLabels.push(\n                dayjs().subtract(point, timeRange).format(timeForm)\n            );\n        }\n        dispatch({\n            type: FETCH_HISTORICAL,\n            payload: { historical, timeLabels },\n        });\n    }, [dispatch, showStar, timePoints, toCurrency, timeRange]);\n\n    React.useEffect(() => {\n        let cryptoBoardData = JSON.parse(localStorage.getItem(\"cryptoBoard\"));\n\n        fetchCoins();\n\n        fetchPrices();\n\n        fetchHistorical();\n\n        if (cryptoBoardData) {\n            dispatch({\n                type: RETRIEVE_STORAGE,\n                payload: cryptoBoardData,\n            });\n        }\n    }, [showStar, toCurrency, timePoints, timeRange]);\n\n    return (\n        <>\n            <Navbar />\n            <Welcome />\n            {page === \"Settings\" ? <Settings /> : <Dashboard />}\n        </>\n    );\n}\n\n\nexport default Core;\n","import React from \"react\";\nimport Applayout from \"./Applayout\";\nimport { AppProvider } from \"./AppProvider\";\nimport Core from \"./Core\";\n\nfunction App() {\n    return (\n        <>\n            <Applayout>\n                <AppProvider>\n                    <Core />\n                </AppProvider>\n            </Applayout>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const FETCH_COINS = \"FETCH_COINS\";\nexport const RETRIEVE_STORAGE = \"RETRIEVE_STORAGE\";\nexport const SET_STORAGE = \"SET_STORAGE\";\nexport const SET_PAGE = \"SET_PAGE\";\nexport const ADD_FAVORITES = \"ADD_FAVORITES\";\nexport const SEARCH = \"SEARCH\";\nexport const QUERY = \"QUERY\";\nexport const SHOW_STAR = \"SHOW_STAR\";\nexport const FETCH_PRICES = \"FETCH_PRICES\";\nexport const FETCH_HISTORICAL = \"FETCH_HISTORICAL\";\nexport const SET_CURRENCY = \"SET_CURRENCY\";\nexport const SET_TIMERANGE = \"SET_TIMERANGE\";\nexport const SET_TIMEPOINTS = \"SET_TIMEPOINTS\";\n","import styled from \"styled-components\";\nimport {\n    subtleBoxShadow,\n    lightBlueBackground,\n    cyanBoxShadow,\n    redBoxShadow,\n} from \"./SharedStyles\";\n\nexport const BlueCard = styled.div`\n    ${subtleBoxShadow};\n    ${lightBlueBackground};\n    transition: all 0.5s;\n    padding: 10px;\n`;\nexport const BlueCardHover = styled(BlueCard)`\n    &:hover {\n        ${cyanBoxShadow}\n    }\n`;\nexport const StarMe = styled(BlueCard)`\n    ${cyanBoxShadow};\n    transform: scale(1.1, 1.1);\n`;\n\nexport const RedCardHover = styled(BlueCardHover)`\n    &:hover {\n        ${redBoxShadow}\n    }\n`;\nexport const DisabledCardHover = styled(BlueCardHover)`\n    opacity: 0.7;\n    pointer-events: none;\n`;\n\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n    BlueCardHover,\n    RedCardHover,\n    DisabledCardHover,\n    StarMe,\n} from \"../Shared/CardHover\";\n\nconst CoinCard = styled.div`\n    display: flex;\n    justify-content: space-around;\n    overflow: hidden;\n    padding: 1%;\n`;\n\nconst CoinInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    font-size: ${(props) => (props.showStar ? \"calc(.5em + 1vw)\" : \"100%\")};\n`;\nconst CoinImage = styled.img`\n    width: 20%;\n    min-width: 25px;\n    height: 20%;\n    min-height: 25px;\n    padding: 1%;\n`;\n\nfunction Coin({\n    coin,\n    coinKey,\n    toggelFavorit = false,\n    favored = false,\n    price = null,\n    disabled = false,\n    showStar = false,\n    dashboard = false,\n    toCurrencey = null,\n}) {\n    let CardHover = BlueCardHover;\n    if (favored && !dashboard) {\n        CardHover = RedCardHover;\n    } else if (!favored && disabled) {\n        CardHover = DisabledCardHover;\n    } else if (coinKey === showStar) {\n        CardHover = StarMe;\n    }\n    return (\n        <CardHover\n            onClick={toggelFavorit ? () => toggelFavorit(coinKey) : undefined}\n        >\n            <CoinCard>\n                <CoinInfo {...{ showStar }}>\n                    <div>{coin && coin.CoinName}</div>\n                    <div>{coin && coin.Symbol}</div>\n                    {price ? (\n                        <div>\n                            {toCurrencey && price[coinKey][toCurrencey].PRICE}{\" \"}\n                            {toCurrencey}\n                        </div>\n                    ) : null}\n                </CoinInfo>\n                {favored && (\n                    <CoinImage\n                        src={`https://www.cryptocompare.com${\n                            coin && coin.ImageUrl\n                        }`}\n                        alt={coin && coin.CoinName}\n                    />\n                )}\n            </CoinCard>\n        </CardHover>\n    );\n}\n\nexport { Coin };\n","import React from \"react\";\nimport {\n    FETCH_COINS,\n    RETRIEVE_STORAGE,\n    SET_PAGE,\n    SET_CURRENCY,\n    SET_TIMERANGE,\n    SET_TIMEPOINTS,\n    ADD_FAVORITES,\n    SEARCH,\n    QUERY,\n    SHOW_STAR,\n    FETCH_PRICES,\n    FETCH_HISTORICAL,\n} from \"./actionTypes\";\n\nconst initialState = {\n    page: \"Dashboard\",\n    firstVisit: true,\n    coins: {},\n    favorites: [\"BTC\", \"ETH\"],\n    prices: {},\n    toCurrency: \"EUR\",\n    allCurrency: \"USD, EUR, BTC\",\n    historical: [],\n    timeLabels: [],\n    timeRange: \"months\",\n    timeForm: \"MMM\",\n    timePoints: 12,\n    showStar: \"BTC\",\n    query: \"\",\n    found: [],\n};\nexport const AppContext = React.createContext();\n\nfunction reducer(state, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case FETCH_COINS:\n            return { ...state, coins: payload };\n        case FETCH_PRICES:\n            return { ...state, prices: payload };\n        case FETCH_HISTORICAL:\n            return {\n                ...state,\n                historical: payload.historical,\n                timeLabels: payload.timeLabels,\n            };\n        case RETRIEVE_STORAGE:\n            return { ...state, ...payload };\n        case SET_PAGE:\n            return { ...state, page: payload };\n        case SET_CURRENCY:\n            return { ...state, toCurrency: payload };\n        case SET_TIMEPOINTS:\n            return { ...state, timePoints: payload };\n        case SET_TIMERANGE:\n            let timeForm = \"MMM\";\n            if (payload === \"days\") {\n                timeForm = \"dd\";\n            } else if (payload === \"hours\") {\n                timeForm = \"HH\";\n            }\n            return { ...state, timeRange: payload, timeForm };\n        case QUERY:\n            return { ...state, query: payload };\n\n        case SEARCH:\n            let coins = Object.keys(state.coins);\n            let found = state.query\n                ? coins.filter(\n                      (coin) =>\n                          state.coins[coin].CoinName.toLowerCase().includes(\n                              state.query\n                          ) ||\n                          state.coins[coin].Symbol.toLowerCase().includes(\n                              state.query\n                          )\n                  )\n                : [];\n            return { ...state, found: found };\n        case ADD_FAVORITES:\n            const isFavorit = (payload) => state.favorites.includes(payload);\n\n            let newFavorites = [];\n            if (isFavorit(payload)) {\n                newFavorites = state.favorites.filter(\n                    (coin) => coin !== payload\n                );\n            } else {\n                newFavorites = [...state.favorites, payload];\n            }\n            return { ...state, favorites: newFavorites };\n        case SHOW_STAR:\n            return { ...state, showStar: payload };\n        default:\n            return state;\n    }\n}\nexport const AppProvider = (props) => {\n    const [state, dispatch] = React.useReducer(reducer, initialState);\n\n    return (\n        <AppContext.Provider value={{ state, dispatch }}>\n            {props.children}\n        </AppContext.Provider>\n    );\n};\n","module.exports = __webpack_public_path__ + \"static/media/loading.d4587895.gif\";","const theme = \"dark\";\n//const theme = 'light';\nexport const lightTheme = theme === \"light\";\n\nexport const color = lightTheme ? \"white\" : \"#061a44\";\nexport const color2 = lightTheme ? \"white\" : \"#010e2c\";\n// export const color3 = lightTheme ? \"#09f010\" : \"#42ff3a\";\nexport const color3 = lightTheme ? \"red\" : \"#00ccff\";\n\nif (lightTheme) {\n    document.body.style.background = \"#e1eaee\";\n    document.body.style.color = \"#061a44\";\n}\n\nexport const lightBlueBackground = `background-color: ${color}`;\nexport const backgroundColor2 = `background-color: ${color2};`;\nexport const greenBackgroundColor = `background-color: ${color3};`;\n\nexport const fontColorGreen = `color: #03A9F4`;\nexport const fontColorWhite = `color: white`;\nexport const subtleBoxShadow = `box-shadow: 0px 0px 5px 1px ${\n    lightTheme ? \"#a9b6ff\" : \"#121d5b\"\n}`;\nexport const greenBoxShadow = `box-shadow: 0px 0px 4px 2px #5fff17`;\nexport const blueBoxShadow = `box-shadow: 0px 0px 4px 2px #0044ff`;\nexport const cyanBoxShadow = `box-shadow: 0px 0px 4px 2px #00ccff`;\nexport const redBoxShadow = `box-shadow: 0px 0px 2px 2px #e41111`;\n\nexport const fontSizeBig = \"font-size: 2em\";\nexport const fontSize1 = \"font-size: 1.5em;\";\nexport const fontSize2 = \"font-size: 1.0em\";\nexport const fontSize3 = \"font-size: .75em\";\n\nexport const textAlignCenter = \"text-align: center;\";\n"],"sourceRoot":""}